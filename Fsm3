module top_module(
    input clk,
    input in,
    input areset,
    output out); //

    reg [1:0] state, n_state;
    parameter A = 0, B = 1, C = 2, D = 3;
    // State transition logic
    always @ (*) begin
        case(state)
            A : n_state = in ? B : A;
            B : n_state = in ? B : C;
            C : n_state = in ? D : A;
            D : n_state = in ? B : C;
        endcase
    end

    // State flip-flops with asynchronous reset
    always @ (posedge clk , posedge areset) begin
        if(areset)
            state <= A;
        else
            state <= n_state;
    end

    // Output logic
    assign out = (state==D);

endmodule
