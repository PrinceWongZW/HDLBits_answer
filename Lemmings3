module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    input dig,
    output walk_left,
    output walk_right,
    output aaah,
    output digging ); 
    
    parameter LEFT = 0, RIGHT = 1, FALLL = 2, FALLR = 3, DIGL = 4, DIGR = 5;
    reg [2:0] state, nstate;
    
    always @ (*) begin
        case(state)
            LEFT : begin
                if(~ground) nstate = FALLL;
                else if(dig) nstate = DIGL;
                else if(bump_left) nstate = RIGHT;
                else nstate = state;
            end
            
            RIGHT : begin
                if(~ground) nstate = FALLR;
                else if(dig) nstate = DIGR;
                else if(bump_right) nstate = LEFT;
                else nstate = state;
            end
            
            DIGL : begin
                nstate = ground? state : FALLL;
            end
            
            DIGR : begin
                nstate = ground? state : FALLR;
            end
            
            FALLL : begin
                nstate = ground ? LEFT : state;
            end
            
            FALLR : begin
                nstate = ground ? RIGHT : state;
            end
        endcase
    end
    
    always @ (posedge clk, posedge areset) begin
        if(areset) state <= LEFT;
        else state <= nstate;
    end
    
    assign walk_left = state==LEFT;
    assign walk_right = state==RIGHT;
    assign aaah = (state==FALLL) | (state==FALLR);
    assign digging = (state==DIGL) | (state==DIGR);

endmodule
